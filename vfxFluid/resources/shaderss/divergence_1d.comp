#version 450

layout (local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

layout (binding = 0) uniform sampler3D t_velocity;
layout (binding = 1) uniform sampler3D t_obstacle;

layout (binding = 0, r16f) uniform image3D i_divergence;

ivec3 clamp_i (ivec3 i_in) {
	ivec3 res;
	res.x = clamp(i_in.x, 0, int(gl_NumWorkGroups.x * gl_WorkGroupSize.x) -1);
	res.y = clamp(i_in.y, 0, int(gl_NumWorkGroups.y * gl_WorkGroupSize.y) -1);
	res.z = clamp(i_in.z, 0, int(gl_NumWorkGroups.z * gl_WorkGroupSize.z) -1);
	return res;
}

void main() {
	ivec3 pos = ivec3(gl_GlobalInvocationID);
	
	vec4 v_f = texelFetch(t_velocity, clamp_i(pos +ivec3(0, 0, 1)), 0);
	vec4 v_b = texelFetch(t_velocity, clamp_i(pos +ivec3(0, 0, -1)), 0);
	vec4 v_r = texelFetch(t_velocity, clamp_i(pos +ivec3(1, 0, 0)), 0);
	vec4 v_l = texelFetch(t_velocity, clamp_i(pos +ivec3(-1, 0, 0)), 0);
	vec4 v_u = texelFetch(t_velocity, clamp_i(pos +ivec3(0, 1, 0)), 0);
	vec4 v_d = texelFetch(t_velocity, clamp_i(pos +ivec3(0, -1, 0)), 0);
	
	vec4 o_f = texelFetch(t_obstacle, clamp_i(pos +ivec3(0, 0, 1)), 0);
	vec4 o_b = texelFetch(t_obstacle, clamp_i(pos +ivec3(0, 0, -1)), 0);
	vec4 o_r = texelFetch(t_obstacle, clamp_i(pos +ivec3(1, 0, 0)), 0);
	vec4 o_l = texelFetch(t_obstacle, clamp_i(pos +ivec3(-1, 0, 0)), 0);
	vec4 o_u = texelFetch(t_obstacle, clamp_i(pos +ivec3(0, 1, 0)), 0);
	vec4 o_d = texelFetch(t_obstacle, clamp_i(pos +ivec3(0, -1, 0)), 0);
	
	if (o_f.x > 0) v_f.xyz = vec3(0);
	if (o_b.x > 0) v_b.xyz = vec3(0);
	if (o_r.x > 0) v_r.xyz = vec3(0);
	if (o_l.x > 0) v_l.xyz = vec3(0);
	if (o_u.x > 0) v_u.xyz = vec3(0);
	if (o_d.x > 0) v_d.xyz = vec3(0);
	
	float div = 0.5 * (v_f.z - v_b.z + v_r.x - v_l.x + v_u.y - v_d.y);
	imageStore(i_divergence, pos, vec4(div));
}
