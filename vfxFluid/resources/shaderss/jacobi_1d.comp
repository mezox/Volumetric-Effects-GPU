#version 450

layout (local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

layout (binding = 0) uniform sampler3D t_divergence;
layout (binding = 1) uniform sampler3D t_obstacle;
layout (binding = 2) uniform sampler3D t_pressure;

layout (binding = 0, r16f) uniform image3D i_pressure_target;

ivec3 clamp_i (ivec3 i_in) {
	ivec3 res;
	res.x = clamp(i_in.x, 0, int(gl_NumWorkGroups.x * gl_WorkGroupSize.x) -1);
	res.y = clamp(i_in.y, 0, int(gl_NumWorkGroups.y * gl_WorkGroupSize.y) -1);
	res.z = clamp(i_in.z, 0, int(gl_NumWorkGroups.z * gl_WorkGroupSize.z) -1);
	return res;
}

void main() {
	ivec3 pos = ivec3(gl_GlobalInvocationID);

	float p_f = texelFetch(t_pressure, clamp_i(pos +ivec3(0, 0, 1)), 0).r;
	float p_b = texelFetch(t_pressure, clamp_i(pos +ivec3(0, 0, -1)), 0).r;
	float p_r = texelFetch(t_pressure, clamp_i(pos +ivec3(1, 0, 0)), 0).r;
	float p_l = texelFetch(t_pressure, clamp_i(pos +ivec3(-1, 0, 0)), 0).r;
	float p_u = texelFetch(t_pressure, clamp_i(pos +ivec3(0, 1, 0)), 0).r;
	float p_d = texelFetch(t_pressure, clamp_i(pos +ivec3(0, -1, 0)), 0).r;
	float p_c = texelFetch(t_pressure, pos, 0).r;
	
	vec4 o_f = texelFetch(t_obstacle, clamp_i(pos +ivec3(0, 0, 1)), 0);
	vec4 o_b = texelFetch(t_obstacle, clamp_i(pos +ivec3(0, 0, -1)), 0);
	vec4 o_r = texelFetch(t_obstacle, clamp_i(pos +ivec3(1, 0, 0)), 0);
	vec4 o_l = texelFetch(t_obstacle, clamp_i(pos +ivec3(-1, 0, 0)), 0);
	vec4 o_u = texelFetch(t_obstacle, clamp_i(pos +ivec3(0, 1, 0)), 0);
	vec4 o_d = texelFetch(t_obstacle, clamp_i(pos +ivec3(0, -1, 0)), 0);
	
	if (o_f.r > 0) p_f = p_c;
	if (o_b.r > 0) p_b = p_c;
	if (o_r.r > 0) p_r = p_c;
	if (o_l.r > 0) p_l = p_c;
	if (o_u.r > 0) p_u = p_c;
	if (o_d.r > 0) p_d = p_c;
	
	float div = texelFetch(t_divergence, pos, 0).r;
	float p = (p_f + p_b + p_r + p_l + p_u + p_d - div) / 6.0;
	imageStore(i_pressure_target, pos, vec4(p));
}