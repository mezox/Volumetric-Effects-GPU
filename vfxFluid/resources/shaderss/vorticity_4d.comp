#version 450

layout (local_size_x = 8, local_size_y = 8, local_size_z = 8) in;
layout (binding = 0) uniform sampler3D t_velocity;
layout (binding = 0, rgba16f) uniform image3D i_vorticity;

ivec3 clamp_i (ivec3 i_in) {
	ivec3 res;
	res.x = clamp(i_in.x, 0, int(gl_NumWorkGroups.x * gl_WorkGroupSize.x) -1);
	res.y = clamp(i_in.y, 0, int(gl_NumWorkGroups.y * gl_WorkGroupSize.y) -1);
	res.z = clamp(i_in.z, 0, int(gl_NumWorkGroups.z * gl_WorkGroupSize.z) -1);
	return res;
}

void main() {
	ivec3 pos = ivec3(gl_GlobalInvocationID);
	
	vec4 v_r = texelFetch(t_velocity, clamp_i(pos +ivec3(1, 0, 0)), 0);
	vec4 v_l = texelFetch(t_velocity, clamp_i(pos +ivec3(-1, 0, 0)), 0);
	vec4 v_u = texelFetch(t_velocity, clamp_i(pos +ivec3(0, 1, 0)), 0);
	vec4 v_d = texelFetch(t_velocity, clamp_i(pos +ivec3(0, -1, 0)), 0);
	vec4 v_f = texelFetch(t_velocity, clamp_i(pos +ivec3(0, 0, 1)), 0);
	vec4 v_b = texelFetch(t_velocity, clamp_i(pos +ivec3(0, 0, -1)), 0);
	
	//vec3 vor = 0.5 * vec3((v_f.z - v_b.z) - (v_u.y - v_d.y), 
	//					  (v_u.x - v_d.x) - (v_r.z - v_l.z), 
	//					  (v_r.y - v_l.y) - (v_f.x - v_b.x));
						  
	vec3 vor = 0.5 * vec3((v_u.z - v_d.z) - (v_f.y - v_b.y), 
						  (v_f.x - v_b.x) - (v_r.z - v_l.z), 
						  (v_r.y - v_l.y) - (v_u.x - v_d.x));
						  
	imageStore(i_vorticity, pos, vec4(vor, 0));
}